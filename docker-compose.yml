version: "3.10"
services:
  app:
    build: .
    volumes:
      - .:/allergie
    ports:
      - 8000:8000
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=127.0.0.1
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    image: app:allergie
    container_name: allergie_container
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - redis

  db:
    container_name: postgresql_db1
    image: postgres
    # automatically restarts the container - Docker daemon on restart or 
    # the container itself is manually restarted
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data

    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin_allergie
    image: dpage/pgadmin4
    restart: always

    volumes:
      - pg_admin:/var/lib/pgadmin

    environment:
      PGADMIN_DEFAULT_EMAIL: moot@moot.com
      PGADMIN_DEFAULT_PASSWORD: moot
      # PGADMIN_LISTEN_PORT = 80
    ports:
      - "5050:80"

  redis:
    image: redis:7.0.8-alpine

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    volumes:
      - .:/allergie
    environment:
      CELERY_BROKER: ${CELERY_BROKER}
      CELERY_BACKEND: ${CELERY_BACKEND}
    depends_on:
      - redis
      - db

  flower:
    build: .
    command: celery -A allergie flower --port=5555
    volumes:
      - .:/allergie
    environment:
      CELERY_BROKER: ${CELERY_BROKER}
      CELERY_BACKEND: ${CELERY_BACKEND}
    ports:
      - "5557:5555"
    depends_on:
      - redis
      - db

volumes:
  pg_data:
  pg_admin:
